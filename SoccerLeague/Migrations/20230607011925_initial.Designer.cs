// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoccerLeague.Data;

#nullable disable

namespace SoccerLeague.Migrations
{
    [DbContext(typeof(SoccerLeagueContext))]
    [Migration("20230607011925_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoccerLeague.Models.Match", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("AwayTeamScore")
                        .HasColumnType("int");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("HomeTeamScore")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Match");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwayTeamId = 3,
                            AwayTeamScore = 2,
                            HomeTeamId = 1,
                            HomeTeamScore = 6,
                            SeasonId = 9,
                            Start = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AwayTeamId = 5,
                            AwayTeamScore = 4,
                            HomeTeamId = 2,
                            HomeTeamScore = 5,
                            SeasonId = 9,
                            Start = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AwayTeamId = 6,
                            AwayTeamScore = 0,
                            HomeTeamId = 4,
                            HomeTeamScore = 2,
                            SeasonId = 9,
                            Start = new DateTime(2023, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AwayTeamId = 5,
                            AwayTeamScore = 4,
                            HomeTeamId = 1,
                            HomeTeamScore = 3,
                            SeasonId = 9,
                            Start = new DateTime(2023, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AwayTeamId = 3,
                            AwayTeamScore = 5,
                            HomeTeamId = 6,
                            HomeTeamScore = 1,
                            SeasonId = 9,
                            Start = new DateTime(2023, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AwayTeamId = 2,
                            AwayTeamScore = 3,
                            HomeTeamId = 4,
                            HomeTeamScore = 2,
                            SeasonId = 9,
                            Start = new DateTime(2023, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AwayTeamId = 11,
                            AwayTeamScore = 3,
                            HomeTeamId = 1,
                            HomeTeamScore = 3,
                            SeasonId = 8,
                            Start = new DateTime(2023, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SoccerLeague.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Season");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "2021 Summer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2021 Fall"
                        },
                        new
                        {
                            Id = 3,
                            Name = "2021 Winter 1"
                        },
                        new
                        {
                            Id = 4,
                            Name = "2021 Winter 2"
                        },
                        new
                        {
                            Id = 5,
                            Name = "2022 Summer"
                        },
                        new
                        {
                            Id = 6,
                            Name = "2022 Fall"
                        },
                        new
                        {
                            Id = 7,
                            Name = "2022 Winter 1"
                        },
                        new
                        {
                            Id = 8,
                            Name = "2022 Winter 2"
                        },
                        new
                        {
                            Id = 9,
                            Name = "2023 Summer"
                        });
                });

            modelBuilder.Entity("SoccerLeague.Models.SeasonTeamBridge", b =>
                {
                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("SeasonId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("SeasonTeamBridge");

                    b.HasData(
                        new
                        {
                            SeasonId = 9,
                            TeamId = 1
                        },
                        new
                        {
                            SeasonId = 9,
                            TeamId = 2
                        },
                        new
                        {
                            SeasonId = 9,
                            TeamId = 3
                        },
                        new
                        {
                            SeasonId = 9,
                            TeamId = 4
                        },
                        new
                        {
                            SeasonId = 9,
                            TeamId = 5
                        },
                        new
                        {
                            SeasonId = 9,
                            TeamId = 6
                        },
                        new
                        {
                            SeasonId = 8,
                            TeamId = 1
                        },
                        new
                        {
                            SeasonId = 8,
                            TeamId = 7
                        },
                        new
                        {
                            SeasonId = 8,
                            TeamId = 8
                        },
                        new
                        {
                            SeasonId = 8,
                            TeamId = 3
                        },
                        new
                        {
                            SeasonId = 8,
                            TeamId = 6
                        },
                        new
                        {
                            SeasonId = 8,
                            TeamId = 9
                        },
                        new
                        {
                            SeasonId = 8,
                            TeamId = 10
                        },
                        new
                        {
                            SeasonId = 8,
                            TeamId = 11
                        });
                });

            modelBuilder.Entity("SoccerLeague.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Gold",
                            Name = "Goal Diggers"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Saigon FC"
                        },
                        new
                        {
                            Id = 3,
                            Name = "UmBros"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Internationals"
                        },
                        new
                        {
                            Id = 5,
                            Color = "Red",
                            Name = "Liverpool"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Deportivo Argento"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Noonan"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ajax"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Reds FC"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Nile Crocodiles"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Unreal"
                        });
                });

            modelBuilder.Entity("SoccerLeague.Models.Match", b =>
                {
                    b.HasOne("SoccerLeague.Models.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoccerLeague.Models.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoccerLeague.Models.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("SoccerLeague.Models.SeasonTeamBridge", b =>
                {
                    b.HasOne("SoccerLeague.Models.Season", "Season")
                        .WithMany("TeamBridges")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoccerLeague.Models.Team", "Team")
                        .WithMany("SeasonBridges")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SoccerLeague.Models.Season", b =>
                {
                    b.Navigation("TeamBridges");
                });

            modelBuilder.Entity("SoccerLeague.Models.Team", b =>
                {
                    b.Navigation("SeasonBridges");
                });
#pragma warning restore 612, 618
        }
    }
}
